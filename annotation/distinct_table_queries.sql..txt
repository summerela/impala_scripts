# noinspection SqlNoDataSourceInspectionForFile

-- Create distinct subsets of input reference tables

-- create kav table
create table anno_grch37.kav_distinct
(
  pos      INT,
  ref STRING,
  alt STRING,
  kav_freq FLOAT,
  kav_source STRING
)
  PARTITIONED BY (chrom string, pos_block int);

-- insert kaviar subset into table by chromosome using bash
#for x in $(seq 1 22) X Y; do echo "$x"; nohup impala-shell -q "\
insert into table anno_grch37.kav_distinct partition (chrom, pos_block)
  select distinct pos, ref, alt, allele_freq as kav_freq,
    CASE when sources is NULL then 'dbSNP'
      else sources
      END as kav_source, chrom, cast(pos/1000000 as INT) as pos_block
  from anno_grch37.kaviar_isb
  where chrom = '$x';
# "; done

-- compute stats on new table
compute stats anno_grch37.kav_distinct;

-- CREATE CLIN_DISTINCT
create table anno_grch37.clin_distinct
  (pos int,
  ref string,
  alt string,
  clin_sig string,
  clin_dbn string
)
  partitioned by (chrom string, pos_block int);

-- insert distinct subset into table
insert into table anno_grch37.clin_distinct partition (chrom, pos_block)
  select distinct pos, ref, alt, clin_sig, clin_dbn,
    CASE
      when chrom = 'MT' then 'M'
        else chrom
    END as chrom,
    cast(pos/1000000 as INT) as pos_block
  from anno_grch37.clinvar;

-- compute stats on new table
compute stats anno_grch37.clin_distinct;

-- CREATE DBSNP SUBSET
create table anno_grch37.dbsnp_distinct
    (pos int,
    ref string,
    alt string,
    rs_id string,
    dbsnp_buildid string
    )
  partitioned by (chrom string, pos_block int);

-- insert subset into table
insert into anno_grch37.dbsnp_distinct partition (chrom, pos_block)
select pos, ref, alt, rs_id, dbsnpbuildid as dbsnp_build,
  CASE
      when chrom = 'MT' then 'M'
        else chrom
    END as chrom,
  cast(pos/1000000 as INT) as pos_block
  from anno_grch37.dbsnp;

-- compute stats on new table
compute stats anno_grch37.dbsnp_distinct;

-- CREATE DBNSPF_DISTINCT
create table anno_grch37.dbnsfp_distinct
(
  pos int,
  ref string,
  alt string,
  cadd_raw float,
  dann_score FLOAT,
  interpro_domain string
)
PARTITIONED BY (chrom string, pos_block int);

-- insert dbnsfp subset into table
#for x in $(seq 1 22) M MT X Y; do nohup impala-shell -q "\
INSERT INTO anno_grch37.dbnsfp_distinct PARTITION (chrom, pos_block)
    select distinct pos, ref, alt, cadd_raw, dann_score,
      interpro_domain, chrom, cast(pos/1000000 as int) as pos_block
    from anno_grch37.dbnsfp_variant
    where chrom = '$x';
# " ; done

--- compute stats on new table
compute stats anno_grch37.dbnsfp_distinct;

-- CREATE ILLUMINA_DISTINCT
-- columns = chrom, pos, ref, alt
-- partitions = chrom, pos_block

-- 22189000636 rows in original wgs_illumina_variant table
-- 208302707 rows with distinct chrom, pos, ref, alt
-- 21980697929 duplicated rows removed

-- create empty table
create table anno_grch37.illumina_distinct
   (pos int,
   ref string,
   alt string
    )
partitioned by (chrom string, pos_block int)

-- insert subset into table, dividing into max(pos)/2 for processing  due to table size

--for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.illumina_distinct partition (chrom, pos_block)
select distinct pos, ref, alt, chrom, cast(pos/1000000 as INT) as pos_block
from p7_platform.wgs_illumina_variant
where chrom = '$x'
and pos < 124620308;
# "; done

#for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.illumina_distinct partition (chrom, pos_block)
select distinct pos, ref, alt, chrom, cast(pos/1000000 as INT) as pos_block
from p7_platform.wgs_illumina_variant
where chrom = '$x'
and pos >= 124620308;
# "; done

-- compute stats on new table
compute stats anno_grch37.illumina_distinct;


-- number of rows in illumina_distinct =  208302707;  PASS

-- CREATE COMGEN_DISTINCT
-- columns = chrom, pos, ref, alt
-- transform = split allele1seq and allele2seq into separate rows for each variant
-- parition = chrom, pos_block

-- create table
create table anno_grch37.comgen_distinct
   (pos int,
   ref string,
   alt string
    )
partitioned by (chrom string, pos_block int)

-- 11,066,152,314 total rows in table
--  rows decomposed into separeate rows for allele1seq and allele2seq with chrom, start as pos, ref, alt
-- 248265502 + 17525708 =   265791210  and ref not null, and alt <> ref

-- insert allele1seq distinct variants into comgen_distinct table, chunking into max(pos)/2 for processing
#for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.comgen_distinct partition (chrom, pos_block)
select distinct start as pos, ref, allele1seq as alt, chrom, cast(start/1000000 as INT) as pos_block
from p7_platform.wgs_comgen_variant
where chrom = '$x'
and start < 124619939
and ref is not null
and allele1seq <> ref;
# "; done

#for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.comgen_distinct partition (chrom, pos_block)
select distinct start as pos, ref, allele1seq as alt, chrom, cast(start/1000000 as INT) as pos_block
from p7_platform.wgs_comgen_variant
where chrom = '$x'
and start >= 124619939
and ref is not null
and allele1seq <> ref;
# "; done

-- insert allele1seq distinct variants into comgen_distinct table, chunking into max(pos)/2 for processing
#for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.comgen_distinct partition (chrom, pos_block)
select distinct start as pos, ref, allele2seq as alt, chrom, cast(start/1000000 as INT) as pos_block
from p7_platform.wgs_comgen_variant
where chrom = '$x'
and start < 124619939
and ref is not null
and allele2seq <> ref;
# "; done

#for x in $(seq 1 22) M X Y; do echo "$x"; nohup impala-shell -q "\
insert into anno_grch37.comgen_distinct partition (chrom, pos_block)
select distinct start as pos, ref, allele2seq as alt, chrom, cast(start/1000000 as INT) as pos_block
from p7_platform.wgs_comgen_variant
where chrom = '$x'
and start >= 124619939
and ref is not null
and allele2seq <> ref;
# "; done

-- compute stats on new table
compute stats comgen_distinct;

-- Checking to see if any variants were repeated between allele1seq and allele2seq
-- 265791210 rows in comgen_distinct = PASS

-- CREATE DISTINCT_VARS (full join of illumina_distinct and comgen_distinct)
-- columns = chrom, pos, ref, alt
-- partition = chrom, pos_block

