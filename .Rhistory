axis.ticks = element_blank(),
axis.text = element_blank(),
axis.title = element_blank())
print(summary_graph)
library(plotly)
install.packages("plotly")
install.packages("plotly")
source("http://bioconductor.org/biocLite.R")
biocLite("plotly")
summary_graph <- ggplot(my_data, aes(x = Category_ID, y = Count)) +
annotation_custom(tableGrob(my_data, show.rownames = FALSE,
show.colnames = TRUE, show.box = TRUE)) +
ggtitle("Study102-genome_summary") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.2), face = "bold", vjust = 2),
axis.ticks = element_blank(),
axis.text = element_blank(),
text = element_text(size=20),
axis.title = element_blank())
print(summary_graph)
summary_graph <- ggplot(my_data, aes(x = Category_ID, y = Count)) +
annotation_custom(tableGrob(my_data, show.rownames = FALSE,
show.colnames = TRUE, show.box = TRUE)) +
ggtitle("Study102-genome_summary") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(size = rel(1.2), face = "bold", vjust = 2),
axis.ticks = element_blank(),
axis.text = element_blank(),
text = element_text(size=10),
axis.title = element_blank())
print(summary_graph)
head(study102)
head(my_data)
sum(my_data$Count)
study102[(study102$Study != "102")]
study102[(study102$Study != "102"),]
install.packages("readr")
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("readr")
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR(F, T, T, F, T, F, T)
library("rstudio", lib.loc="~/R/win-library/3.2")
library("manipulate", lib.loc="~/R/win-library/3.2")
library("graphics", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("grid", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("splines", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("tools", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("utils", lib.loc="C:/Program Files/R/R-3.2.0/library")
install.packages("manipulate")
install.packages("readr")
install.packages("Rcpp")
source("http://bioconductor.org/biocLite.R")
biocLite()
install.packages("knitr")
library(readr)
brady = read_csv("./brady_clinvar.txt", sep="\t", header=TRUE)
brady = read_csv("./brady_clinvar.txt")
brady = read_csv("./queries/testing/clinvar/brady_clinvar.txt")
?read_csv
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
head(brady)
brady = read_delim("./queries/testing/clinvar/brady_clinvar.txt")
brady = read_delim("./queries/testing/clinvar/brady_clinvar.txt", delim="\t")
brady = read_delim("./queries/testing/clinvar/brady_clinvar.txt", delim="\t",col_names=TRUE)
brady = read_delim("./queries/testing/clinvar/brady_clinvar.txt", delim="\t",col_names=FALSE)
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt", delim="\t")
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
head(brady)
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
brady$chrom = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1]))
brady$trio_id = lapply(strsplit(as.character(brady$identifier.or.consent), "-"), function(x) x[3])
brady$trio_id = lapply(strsplit(as.character(brady$identifier_or_consent), "-"), function(x) x[3])
head(brady)
impala = read_tsv("./queries/testing/clinvar/impala_query_results.csv")
head(impala)
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
colnames(impala)
col_names(impala)
library(readr)
col_names(impala)
colnames(impala)
as.character(colnames(impala))
unlist(colnames(impala))
as.list(colnames(impala))
colnames(impala)
colnames(brady)
head(brady)
head(impala)
impala = read_csv("./queries/testing/clinvar/impala_query_results.csv")
colnames(impala)
head(impala)
head(brady)
head(brady)
brady$chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1]))
head(brady)
brady$pos - gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]))
brady$pos - lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])
brady$pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])
head(brady)
brady$zygosity = gsub("homozygous", "hom", brady$zygosity)
head(brady)
sample_id = gsub("^*:", "", brady$identifier_or_consent)
sample_id
sample_id = gsub(".*:","",brady$identifier_or_consent)
sample_id
brady$sample_id = gsub(".*:","",brady$identifier_or_consent)
head(brady)
brady$ref = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])
head(brady)
brady$alt = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])
head(brady)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]),
ref = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1]),
alt = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2]),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = brady$gene_definition,
sample_id = gsub(".*:","",brady$identifier_or_consent)
)
head(brady.df)
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
brady$chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1]))
chr8_hom = brady[which(brady$chrom == "8" & brady$zygosity == "homozygous"),]
brady = chr8_hom[(
grep(paste(pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity) &
grep(paste(not_pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity, invert=TRUE)),]
pathogenic = c("4", "5")
not_pathogenic = c("2", "3")
brady = chr8_hom[(
grep(paste(pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity) &
grep(paste(not_pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity, invert=TRUE)),]
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]))
head(brady.df)
brady
brady = read_tsv("./queries/testing/clinvar/brady_clinvar.txt")
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]))
head(brady)
head(brady.df)
pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]))
pos = lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])
class(pos)
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2]))
head(pos)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])))
head(brady.df)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1]),
alt = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2]),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = brady$gene_definition,
sample_id = gsub(".*:","",brady$identifier_or_consent)
)
head(brady.df)
ref = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])
class(ref)
alt = lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])
class(alt)
zygosity = gsub("homozygous", "hom", brady$zygosity)
class(zygosity)
gene = brady$gene_definition
class(gene)
sample_id = gsub(".*:","",brady$identifier_or_consent)
class(sample_id)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = brady$gene_definition,
sample_id = gsub(".*:","",brady$identifier_or_consent)
)
head(brady.df)
head(impala)
impala.df = data.frame(chr = impala$chr)
head(imapal.df)
head(imapala.df)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref,
alt = impala$allele1seq)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = impala$clin_geneinfo)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = impala$clin_geneinfo,
sample_id = impala$sample_id)
lapply(brady.df, class)
lapply(impala.df, class)
lapply(impala.df, as.character)
impala.df = lapply(impala.df, as.character)
head(impala.df)
impala.df = data.frame(chr = impala$chr,
pos = impala$start,
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = impala$clin_geneinfo,
sample_id = impala$sample_id)
i = sapply(brady.df, is.factor)
brady.df[i] = lapply(brady.df[i], as.character)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
lapply(brady.df, class)
lapply(impala.df, class)
impala.df = data.frame(chr = impala$chr,
pos = as.character(impala$start),
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = impala$clin_geneinfo,
sample_id = impala$sample_id)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
head(brady.df)
head(impala.df)
brady.df = brady.df[with(brady.df, order(sample_id, chr, pos)),]
impala.df = impala.df[with(impala.df, order(sample_id, chr, pos)),]
clin_sig = brady$clinvar_pathogenicity
class(clin_sig)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = brady$gene_definition,
sample_id = gsub(".*:","",brady$identifier_or_consent),
clin_sig = brady$clinvar_pathogenicity
)
head(brady.df)
impala.df = data.frame(chr = impala$chr,
pos = as.character(impala$start),
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = impala$clin_geneinfo,
sample_id = impala$sample_id,
clin_sig = impala$clin_sigid)
head(impala.df)
i = sapply(brady.df, is.factor)
brady.df[i] = lapply(brady.df[i], as.character)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
brady.df = brady.df[with(brady.df, order(sample_id, chr, pos)),]
impala.df = impala.df[with(impala.df, order(sample_id, chr, pos)),]
pathogenic = c("4", "5")
not_pathogenic = c("2", "3")
brady_filter = brady.df[which(brady.df$chr == "8" & brady.df$zygosity == "hom",
&  grep(paste(pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity) &
grep(paste(not_pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity, invert=TRUE)),]
brady_filter = brady.df[which(brady.df$chr == "8" & brady.df$zygosity == "hom"
&  grep(paste(pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity) &
grep(paste(not_pathogenic,collapse="|"), chr8_hom$clinvar_pathogenicity, invert=TRUE)),]
head(brady_filter)
brady_filter = brady.df[which(brady.df$chr == "8" & brady.df$zygosity == "hom"
&  grep(paste(pathogenic,collapse="|"), brady.df$clin_sig) &
grep(paste(not_pathogenic,collapse="|"), brady.df$clin_sig, invert=TRUE)),]
grep(paste(not_pathogenic,collapse="|"), brady.df$clin_sig, invert=TRUE)
grep(paste(pathogenic,collapse="|"), brady.df$clin_sig)
brady_filter = brady.df[which(brady.df$chr == "8" & brady.df$zygosity == "hom"
&  grep(paste(pathogenic,collapse="|"), brady.df$clin_sig) &
grep(paste(not_pathogenic,collapse="|"), brady.df$clin_sig, invert=TRUE)),]
head(brady_filter)
head(impala.df)
rownames(impala.df) = ""
rownames(impala.df) = NULL
rownames(brady.df) = NULL
head(impala.df)
head(impala.df)
head(brady_filter)
rownames(brady_filter) = NULL
head(brady_filter)
brady_filter == impala.df
dim(brady_filter)
dim(impala.df)
gene = lapply(strsplit(brady$gene_definition, ':') function(x) x[1])
gene = lapply(strsplit(brady$gene_definition, ':'), function(x) x[1])
class(gene)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = unlist(lapply(strsplit(brady$gene_definition, ':') function(x) x[1])),
sample_id = gsub(".*:","",brady$identifier_or_consent),
clin_sig = brady$clinvar_pathogenicity
)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = unlist(lapply(strsplit(brady$gene_definition, ':') function(x) x[1])),
sample_id = gsub(".*:","",brady$identifier_or_consent),
clin_sig = brady$clinvar_pathogenicity
)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = unlist(lapply(strsplit(brady$gene_definition, ':') function(x) x[1])),
sample_id = gsub(".*:","",brady$identifier_or_consent),
clin_sig = brady$clinvar_pathogenicity)
brady.df = data.frame(chr = gsub("chr", "", lapply(strsplit(as.character(brady$position), ":"), function(x) x[1])),
pos = unlist(lapply(strsplit(as.character(brady$position), ":"), function(x) x[2])),
ref = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[1])),
alt = unlist(lapply(strsplit(as.character(brady$dna_change), "->"), function(x) x[2])),
zygosity = gsub("homozygous", "hom", brady$zygosity),
gene = unlist(lapply(strsplit(brady$gene_definition, ':'), function(x) x[1])),
sample_id = gsub(".*:","",brady$identifier_or_consent),
clin_sig = brady$clinvar_pathogenicity)
head(brady.df)
head(impala)
impala.df = data.frame(chr = impala$chr,
pos = as.character(impala$start),
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = unlist(lapply(strsplit(impala$clin_geneinfo, ':'), function(x) x[1])),
sample_id = impala$sample_id,
clin_sig = impala$clin_sigid)
i = sapply(brady.df, is.factor)
brady.df[i] = lapply(brady.df[i], as.character)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
##order data frames by sample id, chr, pos for matching
#order both data frames for matching
brady.df = brady.df[with(brady.df, order(sample_id, chr, pos)),]
impala.df = impala.df[with(impala.df, order(sample_id, chr, pos)),]
##subest brady's results to match with impala query
pathogenic = c("4", "5")
not_pathogenic = c("2", "3")
brady_filter = brady.df[which(brady.df$chr == "8" & brady.df$zygosity == "hom"
&  grep(paste(pathogenic,collapse="|"), brady.df$clin_sig) &
grep(paste(not_pathogenic,collapse="|"), brady.df$clin_sig, invert=TRUE)),]
##clear rownames for matching
rownames(impala.df) = NULL
rownames(brady_filter) = NULL
intersect(brady_filter, impala.df)
library(compare)
install.packages("compare")
compare(impala.df, brady_filter)
library(compare)
compare(impala.df, brady_filter)
compare(impala.df, brady_filter, coerce=TRUE)
merge(impala.df, brady_filter, all=TRUE)
merge(impala.df, brady_filter)
compare(impala.df, brady_filter,allowAll=TRUE)
comparison= compare(impala.df, brady_filter,allowAll=TRUE)
dim(comparison)
comparison$result
require(dplyr)
install.packages("dplyr")
require(dplyr)
anti_join(impala.df,brady_filter)
lapply(brady.df, class)
lapply(impala.df, class)
impala.df = data.frame(chr = as.character(impala$chr),
pos = as.character(impala$start),
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = unlist(lapply(strsplit(impala$clin_geneinfo, ':'), function(x) x[1])),
sample_id = impala$sample_id,
clin_sig = impala$clin_sigid)
##coerce all values to character for matching
#coercing columns to same class for comparison
i = sapply(brady.df, is.factor)
brady.df[i] = lapply(brady.df[i], as.character)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
##order data frames by sample id, chr, pos for matching
#order both data frames for matching
brady.df = brady.df[with(brady.df, order(sample_id, chr, pos)),]
impala.df = impala.df[with(impala.df, order(sample_id, chr, pos)),]
rownames(impala.df) = NULL
anti_join(impala.df,brady_filter)
impala.df = data.frame(chr = as.character(impala$chr),
pos = as.character(impala$start),
ref = impala$ref,
alt = impala$allele1seq,
zygosity = impala$zygosity,
gene = unlist(lapply(strsplit(impala$clin_geneinfo, ':'), function(x) x[1])),
sample_id = impala$sample_id,
clin_sig = as.character(impala$clin_sigid))
##coerce all values to character for matching
#coercing columns to same class for comparison
i = sapply(brady.df, is.factor)
brady.df[i] = lapply(brady.df[i], as.character)
j = sapply(impala.df, is.factor)
impala.df[j] = lapply(impala.df[j], as.character)
##order data frames by sample id, chr, pos for matching
#order both data frames for matching
brady.df = brady.df[with(brady.df, order(sample_id, chr, pos)),]
impala.df = impala.df[with(impala.df, order(sample_id, chr, pos)),]
rownames(impala.df) = NULL
anti_join(impala.df,brady_filter)
mismatch = unique(anti_join(impala.df,brady_filter))
dim(mismatch)
mismatch
dim(unique(mismatch$sample_id)
dim(unique(mismatch$sample_id))
dim(unique(mismatch$sample_id))
length(unique(mismatch$sample_id))
not_in_brady = unique(anti_join(impala.df,brady_filter))
dim(not_in_brady)
not_in_impala = unique(anti_join(brady_filter,impala.df))
dim(not_in_impala)
not_in_impala
grep("101-927-F", impala$sample_id)
grep("101-589-M", impala$sample_id)
101-927-F
impala[grep("101-927-F", impala$sample_id),]
head(imapala)
head(impala)
impala[grep("101-927-F", impala$sample_id),]
not_in_brady = unique(anti_join(impala.df,brady_filter))
not_in_impala = unique(anti_join(brady_filter,impala.df))
not_in_brady
not_in_impala
head(impala)
head(impala$clin_sigid)
impala$clin_sigid
head(impala.df)
brady_filter$clin_sig
brady_filter$clin_sig = as.character("5")
head(brady_filter)
not_in_brady = unique(anti_join(impala.df,brady_filter))
dim(not_in_brady)
not_in_impala = unique(anti_join(brady_filter,impala.df))
dim(not_in_impala)
not_in_brady
not_in_impala
brady_filter[which(brady_filter$sample_id == "101-180-M"),]
head(brady_filter)
brady.df[which(brady.df$sample_id == "101-180-M"),]
impala.df[which(impala.df$sample_id == "101-180-M"),]
brady.df[which(brady.df$sample_id == "101-180-M"),]
brady_filter[which(brady_filter$gene == "CRH"),] #not in filtered set
brady.df[which(brady.df$gene == "CRH"),]
impala.df[which(impala.df$sample_id == "101-180-M"),]
brady_filter[which(brady_filter$chr == "8" & brady_filter$pos ="67091182" ),] #not in filtered set
brady_filter[which(brady_filter$chr == "8" & brady_filter$pos =="67091182" ),] #not in filtered set
brady.df[which(brady.df$chr == "8" & brady.df$pos =="67091182" ),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos => 67091172 & brady.df$pos <= 67091192)),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos => "67091172"" & brady.df$pos <= "67091192"")),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos => "67091172" & brady.df$pos <= "67091192")),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "67091172" & brady.df$pos <= "67091192")),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "1" & brady.df$pos <= "67091192")),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "67091100" & brady.df$pos <= "67091200")),]
not_in_brady
brady_filter[which(brady_filter$sample_id == "101-445-M"),] #not in filtered set
impala.df[which(impala.df$sample_id == "101-445-M"),]
brady.df[which(brady.df$sample_id == "101-445-M"),]
brady_filter[which(brady_filter$sample_id == "101-506-M"),] #not in filtered set
impala.df[which(impala.df$sample_id == "101-506-M"),]
brady.df[which(brady.df$sample_id == "101-506-M"),]
brady_filter[which(brady_filter$gene == "CYP11B2"),] #not in filtered set
impala.df[which(impala.df$sample_id == "101-506-M"),]
brady_filter[which(brady_filter$gene == "CYP11B2"),] #not in filtered set
brady.df[which(brady.df$gene == "CYP11B2"),]
not_in_brady
not_in_impala
impala.df[which(impala.df$sample_id == "101-506-M"),]
brady_filter[which(brady_filter$chr == "8" & brady_filter$pos =="143994266" ),] #not in filtered set
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "143994100" & brady.df$pos <= "143994300")),] #nothing in this range
brady.df[which(brady.df$sample_id == "101-180-M"),]
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "67091000" & brady.df$pos <= "67091300")),] #nothing in this range
brady.df[which(brady.df$sample_id == "101-506-M"),]
brady_filter[which(brady_filter$gene == "CYP11B2"),]
brady.df[which(brady.df$gene == "CYP11B2"),]
brady_filter[which(brady_filter$chr == "8" & brady_filter$pos =="143994266" ),] #not in filtered set
brady.df[which(brady.df$chr == "8" & (brady.df$pos >= "143994100" & brady.df$pos <= "143994300")),] #nothing in this range
